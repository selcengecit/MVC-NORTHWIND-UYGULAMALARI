//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_NorthWindUygulama.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NorthwindEntities : DbContext
    {
        public NorthwindEntities()
            : base("name=NorthwindEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CustomerDemographic> CustomerDemographics { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<mgo_Kisiler> mgo_Kisiler { get; set; }
        public virtual DbSet<Order_Detail> Order_Details { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Quality> Qualities { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Shipper> Shippers { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Territory> Territories { get; set; }
        public virtual DbSet<ProductsX> ProductsXes { get; set; }
        public virtual DbSet<Alphabetical_list_of_product> Alphabetical_list_of_products { get; set; }
        public virtual DbSet<Category_Sales_for_1997> Category_Sales_for_1997 { get; set; }
        public virtual DbSet<Current_Product_List> Current_Product_Lists { get; set; }
        public virtual DbSet<Customer_and_Suppliers_by_City> Customer_and_Suppliers_by_Cities { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Order_Details_Extended> Order_Details_Extendeds { get; set; }
        public virtual DbSet<Order_Subtotal> Order_Subtotals { get; set; }
        public virtual DbSet<Orders_Qry> Orders_Qries { get; set; }
        public virtual DbSet<Product_Sales_for_1997> Product_Sales_for_1997 { get; set; }
        public virtual DbSet<Products_Above_Average_Price> Products_Above_Average_Prices { get; set; }
        public virtual DbSet<Products_by_Category> Products_by_Categories { get; set; }
        public virtual DbSet<Sales_by_Category> Sales_by_Categories { get; set; }
        public virtual DbSet<Sales_Totals_by_Amount> Sales_Totals_by_Amounts { get; set; }
        public virtual DbSet<Summary_of_Sales_by_Quarter> Summary_of_Sales_by_Quarters { get; set; }
        public virtual DbSet<Summary_of_Sales_by_Year> Summary_of_Sales_by_Years { get; set; }
        public virtual DbSet<VW_GETCUSTOMERORDERS> VW_GETCUSTOMERORDERS { get; set; }
        public virtual DbSet<VW_GETPRODUCTS> VW_GETPRODUCTS { get; set; }
        public virtual DbSet<VW_GRCUSTOMERS> VW_GRCUSTOMERS { get; set; }
        public virtual DbSet<vw_ortalamasatismiktari> vw_ortalamasatismiktari { get; set; }
        public virtual DbSet<vw_satısurunu> vw_satısurunu { get; set; }
        public virtual DbSet<vw_siparisdetayı> vw_siparisdetayı { get; set; }
    
        [DbFunction("NorthwindEntities", "Fn_GetProducts")]
        public virtual IQueryable<Fn_GetProducts_Result> Fn_GetProducts(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fn_GetProducts_Result>("[NorthwindEntities].[Fn_GetProducts](@productid)", productidParameter);
        }
    
        [DbFunction("NorthwindEntities", "Fn_GetProducts1")]
        public virtual IQueryable<Fn_GetProducts1_Result> Fn_GetProducts1(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fn_GetProducts1_Result>("[NorthwindEntities].[Fn_GetProducts1](@productid)", productidParameter);
        }
    
        [DbFunction("NorthwindEntities", "Fn_GetProducts2")]
        public virtual IQueryable<Fn_GetProducts2_Result> Fn_GetProducts2(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Fn_GetProducts2_Result>("[NorthwindEntities].[Fn_GetProducts2](@productid)", productidParameter);
        }
    
        [DbFunction("NorthwindEntities", "fn_kayitsayma2")]
        public virtual IQueryable<fn_kayitsayma2_Result> fn_kayitsayma2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_kayitsayma2_Result>("[NorthwindEntities].[fn_kayitsayma2]()");
        }
    
        [DbFunction("NorthwindEntities", "fn_product_detaills")]
        public virtual IQueryable<fn_product_detaills_Result> fn_product_detaills(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("productid", productid) :
                new ObjectParameter("productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_product_detaills_Result>("[NorthwindEntities].[fn_product_detaills](@productid)", productidParameter);
        }
    
        [DbFunction("NorthwindEntities", "fn_product_details")]
        public virtual IQueryable<fn_product_details_Result> fn_product_details(string customerid)
        {
            var customeridParameter = customerid != null ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_product_details_Result>("[NorthwindEntities].[fn_product_details](@customerid)", customeridParameter);
        }
    
        [DbFunction("NorthwindEntities", "fn_product_details1")]
        public virtual IQueryable<fn_product_details1_Result> fn_product_details1(string customerid)
        {
            var customeridParameter = customerid != null ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_product_details1_Result>("[NorthwindEntities].[fn_product_details1](@customerid)", customeridParameter);
        }
    
        [DbFunction("NorthwindEntities", "fn_product_of_employee")]
        public virtual IQueryable<fn_product_of_employee_Result> fn_product_of_employee(string employeeid, Nullable<int> yearsold)
        {
            var employeeidParameter = employeeid != null ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(string));
    
            var yearsoldParameter = yearsold.HasValue ?
                new ObjectParameter("yearsold", yearsold) :
                new ObjectParameter("yearsold", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_product_of_employee_Result>("[NorthwindEntities].[fn_product_of_employee](@employeeid, @yearsold)", employeeidParameter, yearsoldParameter);
        }
    
        public virtual ObjectResult<CustOrderHist_Result> CustOrderHist(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrderHist_Result>("CustOrderHist", customerIDParameter);
        }
    
        public virtual ObjectResult<CustOrdersDetail_Result> CustOrdersDetail(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrdersDetail_Result>("CustOrdersDetail", orderIDParameter);
        }
    
        public virtual ObjectResult<CustOrdersOrders_Result> CustOrdersOrders(string customerID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustOrdersOrders_Result>("CustOrdersOrders", customerIDParameter);
        }
    
        public virtual ObjectResult<Employee_Sales_by_Country_Result> Employee_Sales_by_Country(Nullable<System.DateTime> beginning_Date, Nullable<System.DateTime> ending_Date)
        {
            var beginning_DateParameter = beginning_Date.HasValue ?
                new ObjectParameter("Beginning_Date", beginning_Date) :
                new ObjectParameter("Beginning_Date", typeof(System.DateTime));
    
            var ending_DateParameter = ending_Date.HasValue ?
                new ObjectParameter("Ending_Date", ending_Date) :
                new ObjectParameter("Ending_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Employee_Sales_by_Country_Result>("Employee_Sales_by_Country", beginning_DateParameter, ending_DateParameter);
        }
    
        public virtual int insertCategory(string catName, string catDesc)
        {
            var catNameParameter = catName != null ?
                new ObjectParameter("catName", catName) :
                new ObjectParameter("catName", typeof(string));
    
            var catDescParameter = catDesc != null ?
                new ObjectParameter("catDesc", catDesc) :
                new ObjectParameter("catDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertCategory", catNameParameter, catDescParameter);
        }
    
        public virtual int insertProduct(string prodName, Nullable<decimal> unitPrice, Nullable<short> unitsInStock, Nullable<int> categoryID, Nullable<int> supplierID)
        {
            var prodNameParameter = prodName != null ?
                new ObjectParameter("prodName", prodName) :
                new ObjectParameter("prodName", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("unitPrice", unitPrice) :
                new ObjectParameter("unitPrice", typeof(decimal));
    
            var unitsInStockParameter = unitsInStock.HasValue ?
                new ObjectParameter("unitsInStock", unitsInStock) :
                new ObjectParameter("unitsInStock", typeof(short));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertProduct", prodNameParameter, unitPriceParameter, unitsInStockParameter, categoryIDParameter, supplierIDParameter);
        }
    
        public virtual ObjectResult<listCategories_Result> listCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listCategories_Result>("listCategories");
        }
    
        public virtual ObjectResult<listProducts_Result> listProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listProducts_Result>("listProducts");
        }
    
        public virtual ObjectResult<listSuppliers_Result> listSuppliers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listSuppliers_Result>("listSuppliers");
        }
    
        public virtual ObjectResult<Sales_by_Year_Result> Sales_by_Year(Nullable<System.DateTime> beginning_Date, Nullable<System.DateTime> ending_Date)
        {
            var beginning_DateParameter = beginning_Date.HasValue ?
                new ObjectParameter("Beginning_Date", beginning_Date) :
                new ObjectParameter("Beginning_Date", typeof(System.DateTime));
    
            var ending_DateParameter = ending_Date.HasValue ?
                new ObjectParameter("Ending_Date", ending_Date) :
                new ObjectParameter("Ending_Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sales_by_Year_Result>("Sales_by_Year", beginning_DateParameter, ending_DateParameter);
        }
    
        public virtual ObjectResult<SalesByCategory_Result> SalesByCategory(string categoryName, string ordYear)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var ordYearParameter = ordYear != null ?
                new ObjectParameter("OrdYear", ordYear) :
                new ObjectParameter("OrdYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByCategory_Result>("SalesByCategory", categoryNameParameter, ordYearParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spCalisanEkle(Nullable<int> calisanID, string calisanAdi, string calisanSoyadi, string notlar)
        {
            var calisanIDParameter = calisanID.HasValue ?
                new ObjectParameter("calisanID", calisanID) :
                new ObjectParameter("calisanID", typeof(int));
    
            var calisanAdiParameter = calisanAdi != null ?
                new ObjectParameter("calisanAdi", calisanAdi) :
                new ObjectParameter("calisanAdi", typeof(string));
    
            var calisanSoyadiParameter = calisanSoyadi != null ?
                new ObjectParameter("calisanSoyadi", calisanSoyadi) :
                new ObjectParameter("calisanSoyadi", typeof(string));
    
            var notlarParameter = notlar != null ?
                new ObjectParameter("notlar", notlar) :
                new ObjectParameter("notlar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCalisanEkle", calisanIDParameter, calisanAdiParameter, calisanSoyadiParameter, notlarParameter);
        }
    
        public virtual int spCalisanEkle2(string calisanAdi, string calisanSoyadi, string notlar)
        {
            var calisanAdiParameter = calisanAdi != null ?
                new ObjectParameter("calisanAdi", calisanAdi) :
                new ObjectParameter("calisanAdi", typeof(string));
    
            var calisanSoyadiParameter = calisanSoyadi != null ?
                new ObjectParameter("calisanSoyadi", calisanSoyadi) :
                new ObjectParameter("calisanSoyadi", typeof(string));
    
            var notlarParameter = notlar != null ?
                new ObjectParameter("notlar", notlar) :
                new ObjectParameter("notlar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCalisanEkle2", calisanAdiParameter, calisanSoyadiParameter, notlarParameter);
        }
    
        public virtual int spCalisanEkle3(string calisanAdi, string calisanSoyadi, string notlar)
        {
            var calisanAdiParameter = calisanAdi != null ?
                new ObjectParameter("calisanAdi", calisanAdi) :
                new ObjectParameter("calisanAdi", typeof(string));
    
            var calisanSoyadiParameter = calisanSoyadi != null ?
                new ObjectParameter("calisanSoyadi", calisanSoyadi) :
                new ObjectParameter("calisanSoyadi", typeof(string));
    
            var notlarParameter = notlar != null ?
                new ObjectParameter("notlar", notlar) :
                new ObjectParameter("notlar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCalisanEkle3", calisanAdiParameter, calisanSoyadiParameter, notlarParameter);
        }
    
        public virtual int spUrunListesi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUrunListesi");
        }
    
        public virtual ObjectResult<Ten_Most_Expensive_Products_Result> Ten_Most_Expensive_Products()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Ten_Most_Expensive_Products_Result>("Ten_Most_Expensive_Products");
        }
    }
}
